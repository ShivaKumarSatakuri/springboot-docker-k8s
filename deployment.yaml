apiVersion: apps/v1
kind: Deployment  #Need to try by changing this value to 'Pod'
metadata:
  name: docker-k8s-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: docker-k8s-demo
  template:
    metadata:
      labels:
        app: docker-k8s-demo
    spec:
      containers:
        - name: docker-k8s-demo
          image: shivakumarsatakuri/docker-k8s-repo:deploy-build
          imagePullPolicy: Always
          ports:
            - containerPort: 8080

          # Checks the liveness of the docker container. Restarts the pod in case of any deadlocks
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness   # Path to the health endpoint
              port: 8080                        # Port where the application listens
            initialDelaySeconds: 15             # Delay before the first probe
            periodSeconds: 10                   # How often to perform the probe
            timeoutSeconds: 2                   # Timeout for the probe
            failureThreshold: 3                 # Number of failures before restart
            successThreshold: 1

          # Check whether the pod is ready to receive the traffic. If not, pod will be removed from the load balancer
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1

          # Monitors the application inside the container. If not ready, then liveness and readiness probes will not be triggered
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            failureThreshold: 30                # Will wait for 30 * 10 (failureThreshold * periodSeconds) = 30 seconds
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1

---
apiVersion: v1
kind: Service
metadata:
  name: docker-k8s-demo-service
spec:
  selector:
    app: docker-k8s-demo
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
  type: NodePort